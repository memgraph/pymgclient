name: Build Docs

on: 
  workflow_dispatch:
    inputs:
      publish_doc:
        type: boolean
        description: 'If set to true, then the documentation will be published.'
        default: false
        required: false
  workflow_call:
    inputs:
      publish_doc:
        type: boolean
        description: 'If set to true, then the documentation will be published.'
        default: false
        required: false

jobs:
  build_docs:
    name: Build Documentation
    runs-on: [self-hosted, Linux, Ubuntu24.04]
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive


      - name: Install Python Dependencies
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install sphinx

      - name: Get Current Python Version
        run: |
          version="$(( python3 --version 2>&1 || echo ) | grep -Po '(?<=Python )\d+\.\d+' || true)"
          echo "Found version $version"
          echo "PYTHON_VERSION=$version" >> $GITHUB_ENV

      - name: Download Python Artifact
        id: download
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: pymgclient-linux-${{ env.PYTHON_VERSION }}
          path: ./dist

      - name: Record download status
        if: always()
        id: record
        run: |
          echo "Download step outcome: ${{ steps.download.outcome }}"
          if [[ "${{ steps.download.outcome }}" == "success" ]]; then
            echo "DOWNLOAD_STATUS=success" >> $GITHUB_OUTPUT
          else
            echo "DOWNLOAD_STATUS=failure" >> $GITHUB_OUTPUT
          fi

      - name: Install Pymgclient
        if: steps.record.outputs.DOWNLOAD_STATUS == 'success'
        run: |
          source env/bin/activate
          pip install dist/*.whl

      - name: Install Pymgclient
        if: steps.record.outputs.DOWNLOAD_STATUS == 'failure'
        run: |
          source env/bin/activate
          pip install pymgclient

      - name: Build docs
        run: |
          source env/bin/activate
          cd docs
          make html
          rm build/html/.buildinfo
          touch build/html/.nojekyll

      - name: Deploy docs
        if: ${{ github.event.inputs.publish_doc == 'true' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html

      - name: Cleanup
        if: always()
        run: |
          rm -rf env || true